[project]
name = "cherab-nagdis"
description = "Cherab for NAGDIS-II"
authors = ["munechika-koyo <munechika.koyo@torus.nr.ttitech.ac.jp>"]
channels = ["https://prefix.dev/conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tasks.clean]
cmd = "find src/ -type f \\( -name '*.c' -o -name '*.so' -o -name '*.dylib' -o -name '*.html' \\) -delete"
description = "Remove build artifacts and temporary files (e.g. *.c, *.so, *.dylib, *.html)"
[tasks.dataset]
cmd = "python -c 'from experiment.dataset import create_dataset; create_dataset()'"
description = "Create dataset for the experiment"
[tasks.ca]
cmd = "python scripts/ca.py"
description = "Run Conditional & Moving Average of dataset"

[activation.env]
SSH_RAYTRACE_HOSTNAME = "sftp://133.6.100.44/home/koyo/cherab/nagdis/"
SSH_RAYTRACE_USERNAME = "koyo"

[build-dependencies]
c-compiler = "*"

[host-dependencies]
python = "3.12.*"
hatchling = "*"
hatch-vcs = "*"
# hatch-cython = "*" # hatch-cython has not yet been available in conda-forge
cython = "*"
numpy = "*"
cherab = "*"

[dependencies]
calcam = "*"
scipy = "*"
cherab-inversion = "*"
matplotlib = "*"
plotly = "*"
pooch = "*"
paramiko = "*"
tqdm = "*"
rich = "*"
ipython = "*"
cairosvg = "*"
xarray = "*"
netcdf4 = "*"
ffmpeg = "*"

[pypi-dependencies]
hatch-cython = ">=0.6.0rc0"
wvfreader = "*"
cherab-nagdis = { path = ".", editable = true }

[pypi-options]
no-build-isolation = ["cherab-nagdis"]

[feature.lab.dependencies]
ipykernel = "*"
ipywidgets = "*"
jupyterlab = "*"
jupyter_bokeh = "*"
hvplot = "*"
panel = "*"
selenium = "*"
phantomjs = "*"
geckodriver = "*"
firefox = "*"

[feature.lab.tasks.lab]
cmd = "jupyter lab --notebook-dir notebooks/"
description = "Launch Jupyter Lab"

[feature.dev.dependencies]
pytest = "*"
pytest-cov = "*"
pre-commit = "<4"  # docformatter issue: https://github.com/PyCQA/docformatter/pull/287
black = "*"
ruff = "*"
mypy = "*"

[feature.dev.tasks]
format = { cmd = "pre-commit run --all-files", description = "Format and lint files using pre-commit" }

[environments]
lab = { features = ["lab"], solve-group = "default"}
dev = { features = ["dev"], solve-group = "default"}
