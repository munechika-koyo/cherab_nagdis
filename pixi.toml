[project]
name = "cherab-nagdis"
description = "Cherab for NAGDIS-II"
authors = ["munechika-koyo <munechika.koyo@torus.nr.ttitech.ac.jp>"]
channels = ["https://prefix.dev/conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64"]

[tasks]
clean = { cmd = [
    "find",
    "src/",
    "-type f \\(",
    "-name '*.c' -o",
    "-name '*.so' -o",
    "-name '*.dylib' -o",
    "-name '*.html'",
    "\\) -delete",
], description = "ðŸ”¥ Remove build artifacts and temporary files (e.g. *.c, *.so, *.dylib, *.html)" }
dataset = { cmd = [
    "python -c ",
    "'from experiment.dataset import create_dataset; create_dataset()'",
], description = "Create dataset for the experiment"}
ca = { cmd = "python scripts/ca.py", description = "Run Conditional & Moving Average of dataset" }

[activation.env]
SSH_RAYTRACE_HOSTNAME = "sftp://133.6.100.44/home/koyo/cherab/nagdis/"
SSH_RAYTRACE_USERNAME = "koyo"

[build-dependencies]
c-compiler = "*"

[host-dependencies]
python = ">=3.9"
hatchling = "*"
hatch-vcs = "*"
# hatch-cython = "*" # hatch-cython has not yet been available in conda-forge
cython = "*"
numpy = "*"
cherab = "*"

[dependencies]
calcam = "*"
scipy = "*"
cherab-inversion = "*"
matplotlib = "*"
plotly = "*"
pooch = "*"
paramiko = "*"
tqdm = "*"
rich = "*"
ipython = "*"
cairosvg = "*"
xarray = "*"
netcdf4 = "*"
ffmpeg = "*"

[pypi-dependencies]
hatch-cython = ">=0.6.0rc0"
wvfreader = "*"
cherab-nagdis = { path = ".", editable = true }

[pypi-options]
no-build-isolation = ["cherab-nagdis"]

[feature.lab.dependencies]
ipykernel = "*"
ipywidgets = "*"
jupyterlab = "*"
jupyter_bokeh = "*"
hvplot = "*"
panel = "*"
selenium = "*"
phantomjs = "*"
geckodriver = "*"
firefox = "*"

[feature.lab.tasks.lab]
cmd = "jupyter lab --notebook-dir notebooks/"
description = "ðŸš€ Launch Jupyter Lab"

[feature.test.dependencies]
pytest = "*"
pytest-cov = "*"

[feature.test.tasks]
test = { cmd = ["pytest", "tests"], description = "ðŸ§ª Run the tests" }

[feature.lint.dependencies]
pre-commit = "<4"  # docformatter issue: https://github.com/PyCQA/docformatter/pull/287
ruff = "*"
mypy = "*"

[feature.lint.tasks]
lint = { cmd = ["ruff", "check"], description = "ðŸ§¹ Lint the code" }
format = { cmd = ["ruff", "format"], description = "ðŸ§¹ Format the code" }
check = { cmd = [
    "pre-commit",
    "run",
    "--all-files",
], description = "ðŸ©º Check pre-commit hooks", depends-on = [
    "install_hook",
] }
install_hooks = { cmd = [
    "pre-commit",
    "install",
], description = "ðŸ”— Install pre-commit hooks" }

[environments]
lab = { features = ["lab"], solve-group = "default"}
test = { features = ["test"], solve-group = "default"}
lint = { features = ["lint"], no-default-feature = true }
