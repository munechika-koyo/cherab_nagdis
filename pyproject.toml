[build-system]
requires = ["hatchling", "hatch-cython>=0.6.0rc0", "raysect"]
build-backend = "hatchling.build"

[project]
name = "cherab-nagdis"
version = "0.1.0"
description = "Cherab for NAGDIS-II"
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
keywords = ["cherab", "nagdis", "fusion", "plasma", "inversion"]
authors = [{ name = "Koyo Munechika", email = "munechika.koyo@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = [
  "numpy",
  "matplotlib",
  "scipy",
  "cherab",
  "cherab-inversion",
  "pooch",
  "paramiko",
  "tqdm",
]

[project.urls]
repository = "https://github.com/munechika-koyo/cherab_nagdis"

[tool.hatch.build.targets.wheel]
packages = ["src/cherab"]

[tool.hatch.build.targets.wheel.hooks.cython]
dependencies = ["hatch-cython"]

[tool.hatch.build.targets.wheel.hooks.cython.options]
include_numpy = true
src = "cherab"
compile_args = ["-O3"]
compile_py = false

[tool.hatch.build.targets.wheel.hooks.cython.options.files]
targets = ["**/*.pyx"]

[tool.coverage.run]
source_pkgs = ["test", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
test = ["src/test", "*/test/src/test"]
tests = ["tests", "*/test/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.cython-lint]
max-line-length = 140

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "W", "I", "N", "B", "NPY"]
ignore = [
  "E501", # line too long (allow for docstrings)
  "N802", # function name should be lowercase
  "N803", # argument name should be lowercase
  "N806", # variable in function should be lowercase
]

[tool.docformatter]
recursive = true
wrap-summaries = 100
wrap-descriptions = 100
blank = false

[tool.numpydoc_validation]
checks = [
  "all",  # report on all checks, except the below
  "GL01", # Docstring text (summary) should start in the line immediately
  "EX01", # No examples section found
  "SA01", # See Also section not found
  "ES01", # No extended summary found
  "GL08", # The object does not have a docstring
  "RT01", # No Returns section found
  "PR01", # Parameters {missing_params} not documented
  "SS06", # Summary should fit in a single line
]
# remember to use single quotes for regex in TOML
exclude = [ # don't report on objects that match any of these regex
  '\.__repr__$',
]
override_SS05 = ['^Process ', '^Assess ', '^Access ']
